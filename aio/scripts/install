#!/bin/bash
# All-in-One install script
#
#  Copyright (c) 2013-2016 Cisco Systems, Inc. and others.  All rights reserved.
#
#  This program and the accompanying materials are made available under the
#  terms of the Eclipse Public License v1.0 which accompanies this distribution,
#  and is available at http://www.eclipse.org/legal/epl-v10.html
#
# Author: Tim Evens <tim@openbmp.org>

#
# Defaults
#
MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:="OpenBMP"}
OPENBMP_DB_PASSWORD=${OPENBMP_DB_PASSWORD:="openbmp"}

# Disable interactive
export DEBIAN_FRONTEND=noninteractive

# Add build details
touch /usr/local/build-${BUILD_NUMBER}

# Install base packages
apt-get update

# Fix ubuntu docker install
sed -i 's/exit 101/exit 0/' /usr/sbin/policy-rc.d

# General depend install
apt-get -qq install -y ntp debconf-utils wget unzip python python-mysql.connector whois rsync  libssl1.0.0 libsasl2-2

# --
# -- Tomcat and API
# --
apt-get -qq install -y openjdk-7-jre-headless tomcat7

# Update the tomcat files
mv /tmp/tomcat7 /etc/default/
rm -rf /var/lib/tomcat7/webapps/ROOT/*
sed -i 's/8080/8001/g' /var/lib/tomcat7/conf/server.xml

# Extract and install DB rest
wget --no-check-certificate --auth-no-challenge --http-user=readonly --http-password=openbmp \
         https://build-jenkins.openbmp.org:8443/job/openbmp-db_rest/lastSuccessfulBuild/artifact/*zip*/archive.zip

unzip archive.zip
mv archive/target/db_rest.war /tmp/
rm -rf archive
mkdir -p /var/lib/tomcat7/webapps/db_rest
cd /var/lib/tomcat7/webapps/db_rest
unzip /tmp/db_rest.war
chown -R tomcat7:tomcat7 /var/lib/tomcat7/webapps/db_rest
cd /tmp
rm -f /tmp/db_rest.war

# configure DB_REST
sed -r -i "s/username=\"[^\"]+\"/username=\"openbmp\"/" /var/lib/tomcat7/webapps/db_rest/META-INF/context.xml
sed -r -i "s/password=\"[^\"]+\"/password=\"${OPENBMP_DB_PASSWORD}\"/" /var/lib/tomcat7/webapps/db_rest/META-INF/context.xml
sed -r -i "s/jdbc:mysql:[^\"]+/jdbc:mysql:\/\/localhost:3306\/openBMP\//" /var/lib/tomcat7/webapps/db_rest/META-INF/context.xml
sed -r -i "s/jdbc:mariadb:[^\"]+/jdbc:mariadb:\/\/localhost:3306\/openBMP\//" /var/lib/tomcat7/webapps/db_rest/META-INF/context.xml

# --
# -- MySQL/MariaDB server
# --

# Update the debian selection file for prompts
#sed -i "s/MYSQL_ROOT_PASSWORD/${MYSQL_ROOT_PASSWORD}/" /tmp/debconf-set-selections

# Apply the selections
#debconf-set-selections /tmp/debconf-set-selections

# Install MySQL/MariaDB Server
apt-get -y install software-properties-common
apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db
add-apt-repository 'deb http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu trusty main'
apt-get update
apt-get -y install mariadb-server

# Create the tmpfs for mysql
if [[ ! -e /var/mysqltmp ]]; then
    mkdir /var/mysqltmp
    chown mysql:mysql /var/mysqltmp
fi

mv -f /etc/mysql/debian.cnf /etc/mysql/debian.cnf.bk
ln -s /etc/mysql/my.cnf /etc/mysql/debian.cnf
mv -f /etc/mysql/debian-start /etc/mysql/debian-start.orig
cat > /etc/mysql/debian-start <<END
#!/bin/bash

exit 0;
END
chmod 755 /etc/mysql/debian-start

# Download the current OpenBMP schema
wget -O /usr/local/mysql-openbmp-current.db https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/database/mysql-openbmp-current.db

# --
# -- Kafka
# --
mkdir /usr/local/kafka
cd /tmp
wget http://mirror.cc.columbia.edu/pub/software/apache/kafka/0.10.0.1/kafka_2.11-0.10.0.1.tgz
tar xzf kafka_2.11-0.10.0.1.tgz
cd kafka_2.11-0.10.0.1
mv * /usr/local/kafka/
cd /usr/local/kafka/
rm -rf /tmp/kafka_2.11-0.10.0.1*

# Create the logs dir for Kafka topics
mkdir -m 0750 /var/kafka

# Update config
sed -i -r 's/^[#]*log.dirs=.*/log.dirs=\/data\/mysql\/kafka/' config/server.properties
sed -i -r 's/^[#]*log.retention.hours=.*/log.retention.hours=24/' config/server.properties
sed -i -r 's/^[#]*num.partitions=.*/num.partitions=6/' config/server.properties

# --
# -- RPKI Validator
# --
mkdir /usr/local/rpki
cd /tmp
wget https://lirportal.ripe.net/certification/content/static/validator/rpki-validator-app-2.22-dist.tar.gz
tar xzf rpki-validator-app-2.22-dist.tar.gz
cd rpki-validator-app-2.22
mv * /usr/local/rpki/
cd /usr/local/rpki
rm -rf /tmp/rpki-validator-app-2.22*

sed -i -r 's/^[#]*ui.http.port=.*/ui.http.port=8080/' conf/rpki-validator.conf
sed -i -r 's/^[#]*validation.remove_old_objects.interval.*/validation.remove_old_objects.interval=2d/' conf/rpki-validator.conf
sed -i -r 's/^[#]*ui.http.port=.*/ui.http.port=8080/' conf/rpki-validator.conf
sed -i -r 's/^[#]*jvm.memory.maximum=.*/jvm.memory.maximum=2048m/' conf/rpki-validator.conf



# --
# -- OpenBMPd collector
# --
# Install the latest openbmpd package
wget --no-check-certificate --auth-no-challenge \
         https://build-jenkins.openbmp.org:8443/job/openbmp-server-ubuntu-trusty/lastSuccessfulBuild/artifact/*zip*/archive.zip

unzip archive.zip
dpkg -i archive/build/deb_package/openbmp*.deb

rm -rf archive.zip archive

# --
# -- MySQL consumer
# --
cd /tmp
wget --no-check-certificate \
         https://build-jenkins.openbmp.org:8443/job/openbmp-mysql-consumer/lastSuccessfulBuild/artifact/*zip*/archive.zip

unzip archive.zip
rm -f archive.zip
mv archive/target/openbmp-mysql-consumer-*.jar /usr/local/openbmp-mysql-consumer.jar
rm -rf archive

# Extract the whois.db.gz file
cd /usr/local
gzip -d whois.db.gz


# --
# -- Cron scripts
# --
cd /tmp
wget https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/cron_scripts/gen-asn-stats/gen-asn-stats.py
wget https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/cron_scripts/db-maint/openbmp-db-maint
wget https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/cron_scripts/gen-whois/dbAccess.py
wget https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/cron_scripts/gen-whois/gen-whois-route.py
wget https://raw.githubusercontent.com/OpenBMP/openbmp-mysql-consumer/master/cron_scripts/rpki/rpki_validator.py

mv openbmp-db-maint /etc/cron.weekly
chmod 755 /etc/cron.weekly/openbmp-db-maint
mv gen-asn-stats.py /usr/local/bin/
chmod 755 /usr/local/bin/gen-asn-stats.py
mkdir /usr/local/whois
mv dbAccess.py gen-whois-route.py /usr/local/whois/
chmod 755 /usr/local/whois/*

mv rpki_validator.py /usr/local/bin/
chmod 755 /usr/local/bin/rpki_validator.py

#echo "*/30 *  * * *   root   OPENBMP_DB_USER=openbmp OPENBMP_DB_PASSWORD=${OPENBMP_DB_PASSWORD} OPENBMP_DB_NAME=openBMP /usr/local/bin/gen-asn-stats.py > /var/log/gen-asn-stats.log" >> /etc/crontab
echo "2 17 * * * root /usr/local/whois/gen-whois-route.py -u openbmp -p ${OPENBMP_DB_PASSWORD} -d openBMP localhost  > /var/log/openbmp-whois-route.log" >> /etc/crontab
echo "12 1 * * * root /usr/local/rpki/rpki-validator.sh start > /dev/null" >> /etc/crontab
echo "1 */2   * * *   root     /usr/local/bin/rpki_validator.py  -u openbmp -p ${OPENBMP_DB_PASSWORD} -s localhost:8080 localhost > /var/log/rpki-validator.log" >> /etc/crontab


# --
# -- Add host entries for reverse PTR lookups
# --
cat <<END >> /etc/hosts

173.39.209.78   csr1.openbmp.org

END


# --
# -- Clean up
# --
apt-get clean
rm -rf /var/lib/apt/lists/* /var/tmp/*
rm -f /tmp/install
